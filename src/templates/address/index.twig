{# Compensate for a visible map toggle #}
{% switch (settings.visibilityToggle ?? false) %}
    {% case 'both' %}
        {% set marginRight = 92 %}
    {% case 'text' %}
        {% set marginRight = 82 %}
    {% case 'icon' %}
        {% set marginRight = 24 %}
    {% default %}
        {% set marginRight = false %}
{% endswitch %}

{# If necessary, scoot over field attribute box #}
{% if marginRight %}
    {% css "#fields-#{handle}-field-attribute {margin-right: #{marginRight}px}" %}
{% endif %}

{# Get relevant data from PHP #}
{% set data = {
    'address': {
        'formatted' : (address.formatted ?? null),
        'raw'       : (address.raw ?? null),
        'street1'   : (address.street1 ?? null),
        'street2'   : (address.street2 ?? null),
        'city'      : (address.city ?? null),
        'state'     : (address.state ?? null),
        'zip'       : (address.zip ?? null),
        'country'   : (address.country ?? null),
    },
    'coords': {
        'lat'  : (address.lat ?? null),
        'lng'  : (address.lng ?? null),
        'zoom' : (address.zoom ?? null),
    }
} %}

<script>

    // Ensure Address field config array exists
    if ('undefined' === typeof addressFieldConfigs) {
        var addressFieldConfigs = [];
    }

    // Transfer PHP data to JavaScript via Twig
    addressFieldConfigs.push({
        'handle': '{{ handle }}',
        'namespacedId': '{{ "#{handle}-field"|namespaceInputId }}',
        'namespacedName': '{{ handle|namespaceInputName }}',
        'settings': {{ settings|json_encode|raw }},
        'data': {{ data|json_encode|raw }},
        'icons': {{ icons|json_encode|raw }},
    });

</script>

<div id="address-{{ handle }}">
    <address-field
        :handle="handle"
        :namespacedName="namespacedName"
        :settings="settings"
        :data="data"
        :icons="icons"
    ></address-field>
</div>

{# If the library is loaded, initialize all Address fields #}
{% js 'if (window.google) {initAddressField();}' %}
